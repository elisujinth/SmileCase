<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee https://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
	
	<!-- 이 프로젝트가 시작되면 index.jsp를 호출하도록 변경 -->
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>
	
	<!-- DB 설정 등 비즈니스 로직 설정을 관리할 xml 설정 경로 지정 (root-context.xml) -->
	<!-- The definition of the Root Spring Container shared by all Servlets and Filters -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<!-- 경로 변경 (기존 경로: /WEB-INF/spring/root-context.xml) -->
		<param-value>classpath:/spring/root-context.xml</param-value>
	</context-param>
	
	<!-- Creates the Spring Container shared by all Servlets and Filters -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- Dispatcher Servlet 설정 xml 파일 경로 지정 (servlet-context.xml) -->
	<!-- Processes application requests -->
	<servlet>
		<!-- servlet 클래스의 이름은 appServlet이다. -->
		<servlet-name>appServlet</servlet-name>
		<!-- 클래스의 위치는 다음과 같다. -->
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!-- 초기 파라미터 (초기값) 이름과 값을 다음과 같이 지정하겠다. -->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<!-- 경로 변경 (기존 경로: /WEB-INF/spring/appServlet/servlet-context.xml) -->
			<param-value>classpath:/spring/servlet-context.xml</param-value>
		</init-param>
		<!-- '1'의 의미 : 누구보다 먼저 호출하겠다. -->
		<load-on-startup>1</load-on-startup>
	</servlet>
		
	<!-- servlet URL Mapping 설정 -->
	<servlet-mapping>
		<servlet-name>appServlet</servlet-name>
		<!-- .do 로 끝나는 url이 들어가면 서블릿을 작동하겠다. -->
		<url-pattern>*.do</url-pattern>
	</servlet-mapping>

	<!-- 회원 관련  -->
	<servlet>
	    <servlet-name>memberServlet</servlet-name>
	    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
	    <init-param>
	        <param-name>contextConfigLocation</param-name>
	        <param-value>/WEB-INF/spring/appServlet/member-context.xml</param-value>
	    </init-param>	    
	</servlet>
	<servlet-mapping>
	    <servlet-name>memberServlet</servlet-name>
	    <url-pattern>*.me</url-pattern>
	</servlet-mapping>
	
	<!-- 상품 관련 -->
	<servlet>
	    <servlet-name>productServlet</servlet-name>
	    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
	    <init-param>
	        <param-name>contextConfigLocation</param-name>
	        <param-value>/WEB-INF/spring/appServlet/product-context.xml</param-value>
	    </init-param>	    
	</servlet>
	<servlet-mapping>
	    <servlet-name>productServlet</servlet-name>
	    <url-pattern>*.pro</url-pattern>
	</servlet-mapping>
	
	<!-- 리뷰 관련 -->
	<servlet>
		 <servlet-name>reviewServlet</servlet-name>
	    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
	    <init-param>
	        <param-name>contextConfigLocation</param-name>
	        <param-value>/WEB-INF/spring/appServlet/review-context.xml</param-value>
	    </init-param>
	</servlet>
	<servlet-mapping>
	    <servlet-name>reviewServlet</servlet-name>
	    <url-pattern>*.re</url-pattern>
	</servlet-mapping>
	
	<!-- 한글 처리 코드 (UTF-8 관련 파라미터 설정) -->
	<!-- controller에서 response.setCharacterEncoding()을 매번 실행하지 않기 위해
		 서블릿 필터를 이용하여 처리 -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<!-- 위에 지정한 encodingFilter 이름을 모든 패턴에 적용 -->
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	

</web-app>
